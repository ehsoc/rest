{
	"swagger": "2.0",
	"info": {
		"description": "This is a sample server Petstore server.",
		"version": "1.0.0",
		"title": "Petstore",
		"termsOfService": "",
		"contact": {
			"email": ""
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"host": "localhost",
	"basePath": "/v2",
	"schemes": [
		"https",
		"http"
	],
	"paths": {
		"/pet": {
			"post": {
				"summary": "Add a new pet to the store",
				"description": "",
				"consumes": [
					"application/json",
					"application/xml"
				],
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Pet object that needs to be added to the store",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Pet"
					}
				}],
				"responses": {
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad Request"
					},
					"415": {
						"description": "Unsupported Media Type"
					}
				}
			},
			"put": {
				"summary": "Update an existing pet",
				"description": "",
				"consumes": [
					"application/json",
					"application/xml"
				],
				"produces": [
					"application/xml",
					"application/json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Pet object that needs to be added to the store",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Pet"
					}
				}],
				"responses": {
					"400": {
						"description": "Invalid ID supplied"
					},
					"404": {
						"description": "Pet not found"
					},
					"405": {
						"description": "Validation exception"
					}
				}
			}
		},
		"/pet/findByStatus": {
			"get": {
				"summary": "Finds Pets by status",
				"description": "Multiple status values can be provided with comma separated strings",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"name": "status",
					"in": "query",
					"description": "Status values that need to be considered for filter",
					"required": true,
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"available",
							"pending",
							"sold"
						],
						"default": "available"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Pet"
							}
						}
					},
					"400": {
						"description": "Invalid status value"
					},
					"415": {
						"description": "Unsupported Media Type"
					}
				}
			}
		},
		"/pet/{petId}": {
			"get": {
				"summary": "Find pet by ID",
				"description": "Returns a single pet",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
					"name": "petId",
					"in": "path",
					"description": "ID of pet to return",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Pet"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"415": {
						"description": "Unsupported Media Type"
					}
				}
			},
			"post": {
				"summary": "Updates a pet in the store with form data",
				"description": "",
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"produces": [
					"application/xml",
					"application/json"
				],
				"parameters": [{
						"name": "petId",
						"in": "path",
						"description": "ID of pet that needs to be updated",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "formData",
						"description": "Updated name of the pet",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "formData",
						"description": "Updated status of the pet",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"405": {
						"description": "Invalid input"
					}
				}
			},
			"delete": {
				"summary": "Deletes a pet",
				"description": "",
				"produces": [
					"application/json",
					"application/xml"
				],
				"parameters": [{
						"name": "api_key",
						"in": "header",
						"required": false,
						"type": "string"
					},
					{
						"name": "petId",
						"in": "path",
						"description": "Pet id to delete",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"404": {
						"description": "Not Found"
					},
					"415": {
						"description": "Unsupported Media Type"
					}
				}
			}
		},
		"/pet/{petId}/uploadImage": {
			"post": {
				"summary": "uploads an image",
				"description": "",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"application/json"
				],
				"parameters": [{
						"name": "petId",
						"in": "path",
						"description": "ID of pet to update",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "additionalMetadata",
						"in": "formData",
						"description": "Additional data to pass to server",
						"required": false,
						"type": "string"
					},
					{
						"name": "file",
						"in": "formData",
						"description": "file to upload",
						"required": false,
						"type": "file"
					},
					{
						"name": "jsonPetData",
						"in": "formData",
						"description": "json format data",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"415": {
						"description": "Unsupported Media Type"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
		"definitions": {
			"Order": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"petId": {
						"type": "integer",
						"format": "int64"
					},
					"quantity": {
						"type": "integer",
						"format": "int32"
					},
					"shipDate": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string",
						"description": "Order Status",
						"enum": [
							"placed",
							"approved",
							"delivered"
						]
					},
					"complete": {
						"type": "boolean",
						"default": false
					}
				},
				"xml": {
					"name": "Order"
				}
			},
			"Category": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					}
				},
				"xml": {
					"name": "Category"
				}
			},
			"User": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"username": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"userStatus": {
						"type": "integer",
						"format": "int32",
						"description": "User Status"
					}
				},
				"xml": {
					"name": "User"
				}
			},
			"Tag": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"name": {
						"type": "string"
					}
				},
				"xml": {
					"name": "Tag"
				}
			},
			"Pet": {
				"type": "object",
				"required": [
					"name",
					"photoUrls"
				],
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					},
					"category": {
						"$ref": "#/definitions/Category"
					},
					"name": {
						"type": "string",
						"example": "doggie"
					},
					"photoUrls": {
						"type": "array",
						"xml": {
							"name": "photoUrl",
							"wrapped": true
						},
						"items": {
							"type": "string"
						}
					},
					"tags": {
						"type": "array",
						"xml": {
							"name": "tag",
							"wrapped": true
						},
						"items": {
							"$ref": "#/definitions/Tag"
						}
					},
					"status": {
						"type": "string",
						"description": "pet status in the store",
						"enum": [
							"available",
							"pending",
							"sold"
						]
					}
				},
				"xml": {
					"name": "Pet"
				}
			},
			"ApiResponse": {
				"type": "object",
				"properties": {
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"type": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				}
			}
		}
	}
}